{
  "name": "social-media-app",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "description": "Full-stack social media application with ESM, TypeScript, and AWS",
  "engines": {
    "node": ">=22.0.0",
    "pnpm": ">=8.0.0"
  },
  "scripts": {
    "build": "pnpm -r build",
    "build:shared": "pnpm --filter @social-media-app/shared build",
    "test": "pnpm -r test",
    "test:unit": "pnpm -r test:unit",
    "lint": "pnpm -r lint",
    "typecheck": "pnpm -r typecheck",
    "clean": "pnpm -r clean",
    "prepare": "husky install",
    "dev": "pnpm dev:localstack",
    "dev:localstack": "pnpm switch:localstack && ./scripts/start-dev-sequential.sh",
    "dev:localstack:parallel": "pnpm switch:localstack && pnpm local:start && pnpm dev:servers",
    "dev:mocks": "pnpm switch:mocks && pnpm dev:frontend",
    "dev:servers": "concurrently \"pnpm dev:backend\" \"pnpm dev:frontend\" --names \"API,WEB\" --prefix-colors \"blue,green\"",
    "dev:backend": "pnpm --filter @social-media-app/backend dev:local",
    "dev:frontend": "pnpm --filter @social-media-app/frontend dev:force",
    "servers:start": "pnpm dev:servers",
    "servers:stop": "pnpm dev:stop && pnpm local:stop",
    "servers:restart": "pnpm servers:stop && sleep 2 && pnpm dev:localstack",
    "servers:status": "pnpm local:status && pnpm port:status",
    "port:status": "echo '=== Port Status ===' && (lsof -i :3000 || echo 'Port 3000: FREE') && (lsof -i :3001 || echo 'Port 3001: FREE')",
    "port:clear:3000": "lsof -ti:3000 | xargs kill -9 2>/dev/null || echo 'Port 3000 is free'",
    "port:clear:3001": "lsof -ti:3001 | xargs kill -9 2>/dev/null || echo 'Port 3001 is free'",
    "port:clear": "pnpm port:clear:3000 && pnpm port:clear:3001",
    "dev:stop": "pkill -f 'node.*3000|node.*3001|node.*3002' || echo 'No dev servers running'",
    "reset": "./scripts/cleanup-dev.sh && pnpm port:clear && pnpm local:stop",
    "quick:localstack": "pnpm reset && pnpm dev:localstack",
    "quick:mocks": "pnpm reset && pnpm dev:mocks",
    "local:start": "docker-compose -f docker-compose.local.yml up -d",
    "local:stop": "docker-compose -f docker-compose.local.yml down",
    "local:status": "docker-compose -f docker-compose.local.yml ps && curl -s http://localhost:4566/_localstack/health | jq .",
    "local:logs": "docker-compose -f docker-compose.local.yml logs -f",
    "local:restart": "pnpm local:stop && pnpm local:start",
    "switch:localstack": "cp .env.local .env && echo 'ðŸ”§ Switched to LocalStack mode'",
    "switch:mocks": "cp .env.mocks .env && echo 'ðŸŽ­ Switched to MSW mock mode'",
    "seed:local": "USE_LOCALSTACK=true TABLE_NAME=tamafriends-local tsx scripts/seed-database.ts",
    "seed:local:fresh": "pnpm reset && pnpm dev:localstack && sleep 8 && pnpm seed:local",
    "deploy:backend": "./deploy-backend.sh",
    "deploy:backend:prod": "CDK_ENV=prod ./deploy-backend.sh",
    "test:deployment": "./test-deployment.sh",
    "rollback:backend": "./rollback-backend.sh",
    "status": "./scripts/deployment-status.sh",
    "status:dev": "./scripts/deployment-status.sh dev",
    "status:staging": "./scripts/deployment-status.sh staging",
    "status:production": "./scripts/deployment-status.sh production"
  },
  "devDependencies": {
    "@aws-sdk/client-dynamodb": "^3.894.0",
    "@aws-sdk/lib-dynamodb": "^3.894.0",
    "@faker-js/faker": "^10.0.0",
    "@types/node": "^22.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "concurrently": "^8.2.2",
    "esbuild": "^0.19.12",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-functional": "^6.0.0",
    "husky": "^8.0.0",
    "lint-staged": "^15.0.0",
    "prettier": "^3.0.0",
    "tsx": "^4.20.6",
    "typescript": "^5.3.0",
    "vitest": "^1.0.0"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}